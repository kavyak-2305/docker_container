pipeline {
  agent any

  environment {
    SONAR_URL = "http://3.85.5.39:9000/"
    GIT_REPO_NAME = "docker_container"
    GIT_USER_NAME = "kavyak-2305"
    DOCKER_IMAGE = "kavyak2305/cicd:${BUILD_NUMBER}"
  }

  stages {

    stage('Clone Repo') {
      steps {
        git url: 'https://github.com/kavyak-2305/docker_container.git',
            branch: 'master',
            credentialsId: 'github-pat'
      }
    }

    stage('Checkout') {
      steps {
        sh 'echo passed'
      }
    }

    // stage('Build and Test') {
    //   steps {
    //     sh '''
    //         cd cicd-pipeline/java-app
    //           mvn clean package -DskipTests -T 1C
    //           cp target/registrationForm-0.0.1-SNAPSHOT.jar app.jar
    //     '''
    //   }
    // }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_AUTH_TOKEN')]) {
            sh '''
                cd cicd-pipeline/java-app
                mvn clean install
                mvn sonar:sonar \
                    -Dsonar.host.url=http://3.85.5.39:9000 \
                    -Dsonar.login=$SONAR_AUTH_TOKEN
            '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          sh '''
            cd cicd-pipeline/java-app
            docker build -t $DOCKER_IMAGE .
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push $DOCKER_IMAGE
          '''
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "kavyakuthala2305@gmail.com"
            git config user.name "Kavya Kuthala"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" cicd-pipeline/app-manifest/deployment.yml
            git add cicd-pipeline/app-manifest/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
